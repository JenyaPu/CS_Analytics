import json
import matplotlib.pyplot as plt
import matplotlib.image as mpimg


with open('data/round.json') as json_data:
    data = json.load(json_data)


# Meta information about the round
RoundEndState = data["RoundEndState"]["FrameNumber"]
Analysis = ""

positions = data["PlayersPositions"]
events = data["Events"]
print(len(events))
fig, ax = plt.subplots(figsize=(15, 15))
img = mpimg.imread('data/map.png')
sizes = img.shape
# ax.imshow(img, extent=[1261.71875, 1261.71875-2000, 669.140625, 669.140625-2000])
for i in range(0, len(positions)):
    print("Minimum X coordiate player %s :%s" % (i, min(positions[i]["X"])))
    print("Maximum X coordiate player %s :%s" % (i, max(positions[i]["X"])))
    print("Minimum Y coordiate player %s :%s" % (i, min(positions[i]["Y"])))
    print("Maximum Y coordiate player %s :%s" % (i, max(positions[i]["Y"])))
    print("Minimum Z coordiate player %s :%s" % (i, min(positions[i]["Z"])))
    print("Maximum Z coordiate player %s :%s" % (i, max(positions[i]["Z"])))
    print("Number of coordinates for player %s :%s" % (i, len(positions[i]["Z"])))
    ax.scatter(positions[i]["X"][0], positions[i]["Y"][0])
    if i < RoundEndState:
        ax.scatter(positions[i]["X"][-1], positions[i]["Y"][-1], marker='x')
    X_coord = positions[i]["X"]
    Y_coord = positions[i]["Y"]
    ax.plot(X_coord, Y_coord)

# Kills
a = 0
b = 0
c = 0
for i in range(0, len(events)):
    event = events[i]
    print(event)
    print(event['EventType'])
    # Kills
    # if event["EventType"] == 1:
    #     a = a + 1
    #     ax.scatter(event["Data"]["VictimPos"]["X"], event["Data"]["VictimPos"]["Y"], marker='X', color='brown')
    #     ax.scatter(event["Data"]["KillerPos"]["X"], event["Data"]["KillerPos"]["Y"], marker='.', color='b')
    #     plt.plot([event["Data"]["VictimPos"]["X"], event["Data"]["KillerPos"]["X"]],
    #              [event["Data"]["VictimPos"]["Y"], event["Data"]["KillerPos"]["Y"]], c='red')
    # Hits
    # if event["EventType"] == 47:
    #     b = b + 1
    #     ax.scatter(event["Data"]["PlayerPos"]["X"], event["Data"]["PlayerPos"]["Y"], marker='.', color='r')
    #     ax.scatter(event["Data"]["AttackerPos"]["X"], event["Data"]["AttackerPos"]["Y"], marker='.', color='b')
    #     plt.plot([event["Data"]["PlayerPos"]["X"], event["Data"]["AttackerPos"]["X"]],
    #              [event["Data"]["PlayerPos"]["Y"], event["Data"]["AttackerPos"]["Y"]], c='orange', linewidth='0.5')
    # Shots
    if event["EventType"] == 66:
        c = c + 1
        shooter = event["Data"]["Shooter"]
        frame = event["FrameNumber"]
        # for j in range(0, len(positions)):
        #     if positions[j]["PlayerID"] == shooter:
        #         X_coord =

print(b)

# Shoots
a = 0
for i in range(0, len(events)):
    event = events[i]
    print(event)
    print(event['EventType'])
    if event["EventType"] == 1:
        a = a + 1
        ax.scatter(event["Data"]["VictimPos"]["X"], event["Data"]["VictimPos"]["Y"], marker='X')
        ax.scatter(event["Data"]["KillerPos"]["X"], event["Data"]["KillerPos"]["Y"], marker='o')
        plt.plot([event["Data"]["VictimPos"]["X"], event["Data"]["KillerPos"]["X"]],
                 [event["Data"]["VictimPos"]["Y"], event["Data"]["KillerPos"]["Y"]], c='r')
print(a)


# plt.legend(range(0, len(positions)), loc='upper left')
# ax.imshow(img)
# img = ndimage.rotate(img, 180)
# img = ndimage.zoom(img, 2.56)
# ax.imshow(img)
ax.imshow(img, extent=[-2560-670, 2560-670, -2560-850, 2560-850])
ax.set_ylim((-3000, 2000))
ax.set_xlim(-3000, 2000)
plt.title("Trajectories", fontsize=20)
# plt.show()
fig.savefig("3.png", transparent=True)
